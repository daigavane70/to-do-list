{"version":3,"sources":["TaskList.js","Store/actions.js","App.js","reportWebVitals.js","Store/defaultState.js","Store/list1.js","Store/list2.js","Store/store.js","index.js"],"names":["TaskList","props","className","task","no","name","time","INSERT1","INSERT2","connect","state","list1","list2","dispatch","insert1","type","insert2","useState","setlist1","setlist2","useEffect","map","Insert","e","newTask","length","document","getElementById","value","target","id","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","defaultList","reducer","action","Actions","concat","defList","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunk","ReactDOM","render","StrictMode","Store"],"mappings":"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","file":"static/js/main.26852469.chunk.js","sourcesContent":["const TaskList = (props) => (\n    <tr className='item'>\n        <td> {props.task.no} </td>\n        <td> {props.task.name} </td>\n        <td> {props.task.time} </td>\n    </tr>\n)\n\nexport default TaskList;","export const INSERT1 = 'INSERT1'\nexport const DELETETASK = 'DELETE'\nexport const CLEAR = 'CLEAR'\nexport const INSERT2 = 'INSERT2'\n\nexport const insert1 = (task) => {\n    return {\n        type: INSERT1,\n        task: task\n    }\n}\n\nexport const insert2 = (task) => {\n    return {\n        type: INSERT2,\n        task: task\n    }\n}\n\nexport const deleteTask = task => {\n    return {\n        type: DELETETASK,\n        task: task\n    }\n}\n\nexport const clear = () => {\n    return {\n        type: CLEAR\n    }\n}","import './App.css';\nimport { useState, useEffect } from 'react';\nimport TaskList from './TaskList';\nimport { connect } from 'react-redux';\nimport { insert1, insert2 } from './Store/actions';\n\nfunction App(props) {\n\n  const [list1, setlist1] = useState([])\n  const [list2, setlist2] = useState([])\n\n  useEffect(() => {\n\n    setlist1(props.list1.map(task => {\n      return <TaskList task={task} />\n    }))\n\n    setlist2(props.list2.map(task => {\n      return <TaskList task={task} />\n    }))\n\n  }, [props])\n\n  const Insert = (e) => {\n\n    let newTask = {\n      no: props.list2.length + 1,\n      name: document.getElementById('task').value,\n      time: document.getElementById('time').value\n    }\n\n    if (e.target.id === '1') {\n      props.insert1(newTask)\n    }\n    else {\n      props.insert2(newTask)\n    }\n\n\n  }\n\n  return (\n    <div className=\"App\">\n\n      <header className=\"App-header\">\n        <h1> To Do List App </h1>\n      </header>\n\n      <div>\n        <h3>Insert Into Table</h3>\n        <label>Task: </label><input id='task' type='text'></input>\n        <label>Time: </label><input id='time' type='time'></input>\n        <div>\n          <button onClick={Insert} id='1'>Insert in 1</button>\n          <button onClick={Insert} id='2'>Insert in 2</button>\n        </div>\n      </div>\n\n      <div className='list-container'>\n        <div>\n          <h3> List 1 </h3>\n          <table className='list'>\n            <thead>\n              <tr className='head item'>\n                <th>Sr.No</th>\n                <th>Task</th>\n                <th>Time</th>\n              </tr>\n            </thead>\n            <tbody>\n              {list1}\n            </tbody>\n          </table>\n        </div>\n\n        <div>\n          <h3> List 2 </h3>\n          <table className='list'>\n            <thead>\n              <tr className='head item'>\n                <th>Sr.No</th>\n                <th>Task</th>\n                <th>Time</th>\n              </tr>\n            </thead>\n            <tbody>\n              {list2}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    list1: state.list1,\n    list2: state.list2\n  }\n}\n\nconst mapActionToProps = dispatch => {\n  return {\n    insert1: task => { dispatch(insert1(task)) },\n    insert2: task => { dispatch(insert2(task)) }\n  }\n}\n\nexport default connect(mapStateToProps, mapActionToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const defaultList = []\n\nexport default defaultList;","import {} from 'react-redux';\nimport defaultList from './defaultState';\nimport * as Actions from './actions';\n\nconst reducer = ( state = defaultList, action ) => {\n    \n    switch(action.type){\n\n        case Actions.INSERT1: {\n            return state.concat(action.task)\n        }\n\n        default: {\n            return state;\n        }\n    \n    }\n    \n}\n\nexport default reducer;","import {INSERT2} from './actions';\nimport defList from './defaultState';\n\nconst reducer = ( state = defList, action ) => {\n    \n    switch( action.type ){\n\n        case INSERT2: {\n            return state.concat(action.task)\n        }\n        \n        default: {\n            return state\n        }\n  \n    }\n\n}\n\nexport default reducer;","import list1 from './list1';\nimport list2 from './list2';\n\nimport { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore( combineReducers( { list1, list2 } ), composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport Store from './Store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {Store} >\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}